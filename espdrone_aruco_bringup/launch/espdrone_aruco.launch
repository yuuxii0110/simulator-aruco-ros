<?xml version="1.0"?>
<launch>
  
  <!-- Configurations -->
  <arg name="drone_index" default="0"/>
  <arg name="visualize_output" default="true"/>
  <arg name="aruco_marker_size" default="0.1778"/>
  <arg name="aruco_map_config_file" default="$(find espdrone_aruco_bringup)/environment/gazebo.yml"/>
  <arg name="marker_map_frame" default="aruco_map"/>
  <arg name="world_fixed_frame" default="world_frame"/>
  
  <group ns="camera1">
    <node pkg="image_proc" type="image_proc" name="image_proc" output="screen"/>
    <!-- Image filter to enhance ArUco marker detection -->
    <include file="$(find aruco_mapping_filter)/launch/aruco_mapping_filter.launch"/>
  </group>

  <!-- ArUco mapping stuff -->

  <!-- Remap 'position' topic published by 'aruco_map_pose_tracker' node into '/<drone_name>/external_position' subscribed
       by 'espdrone_server'. This will feed the position estimate from 'aruco_map_pose_tracker' to the drone's Kalman
       filter (our goal is to use the onboard camera and the ArUco marker map as positioning system).
   -->
 
  <include file="$(find aruco_ros)/launch/map.launch">
    <arg name="camera_frame" value="camera_link_$(arg drone_index)"/>
    <arg name="marker_size" value="$(arg aruco_marker_size)"/>
    <arg name="map_config" value="$(arg aruco_map_config_file)"/>
    <arg name="visualize" value="$(arg visualize_output)"/>
    <arg name="marker_map_frame" value="$(arg marker_map_frame)"/>
    <arg name="world_fixed_frame" value="$(arg world_fixed_frame)"/>
    <arg name="drone_index" value="$(arg drone_index)"/>
  </include>

</launch>